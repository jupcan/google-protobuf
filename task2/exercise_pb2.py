# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: exercise.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='exercise.proto',
  package='exercise',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0e\x65xercise.proto\x12\x08\x65xercise\"\x0e\n\x0cGetIdRequest\"+\n\nGetIdReply\x12\x0b\n\x03\x64ni\x18\x01 \x01(\t\x12\x10\n\x08\x66ullname\x18\x02 \x01(\t\",\n\x0e\x43heckmeRequest\x12\x0c\n\x04host\x18\x01 \x01(\t\x12\x0c\n\x04port\x18\x02 \x01(\x05\"\x1e\n\x0c\x43heckmeReply\x12\x0e\n\x06result\x18\x02 \x01(\x08\x32@\n\x05Ident\x12\x37\n\x05getID\x12\x16.exercise.GetIdRequest\x1a\x14.exercise.GetIdReply\"\x00\x32\x46\n\x05\x43heck\x12=\n\x07\x63heckme\x12\x18.exercise.CheckmeRequest\x1a\x16.exercise.CheckmeReply\"\x00\x62\x06proto3')
)




_GETIDREQUEST = _descriptor.Descriptor(
  name='GetIdRequest',
  full_name='exercise.GetIdRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=28,
  serialized_end=42,
)


_GETIDREPLY = _descriptor.Descriptor(
  name='GetIdReply',
  full_name='exercise.GetIdReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dni', full_name='exercise.GetIdReply.dni', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='fullname', full_name='exercise.GetIdReply.fullname', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=44,
  serialized_end=87,
)


_CHECKMEREQUEST = _descriptor.Descriptor(
  name='CheckmeRequest',
  full_name='exercise.CheckmeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='host', full_name='exercise.CheckmeRequest.host', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port', full_name='exercise.CheckmeRequest.port', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=89,
  serialized_end=133,
)


_CHECKMEREPLY = _descriptor.Descriptor(
  name='CheckmeReply',
  full_name='exercise.CheckmeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='exercise.CheckmeReply.result', index=0,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=135,
  serialized_end=165,
)

DESCRIPTOR.message_types_by_name['GetIdRequest'] = _GETIDREQUEST
DESCRIPTOR.message_types_by_name['GetIdReply'] = _GETIDREPLY
DESCRIPTOR.message_types_by_name['CheckmeRequest'] = _CHECKMEREQUEST
DESCRIPTOR.message_types_by_name['CheckmeReply'] = _CHECKMEREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

GetIdRequest = _reflection.GeneratedProtocolMessageType('GetIdRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETIDREQUEST,
  __module__ = 'exercise_pb2'
  # @@protoc_insertion_point(class_scope:exercise.GetIdRequest)
  ))
_sym_db.RegisterMessage(GetIdRequest)

GetIdReply = _reflection.GeneratedProtocolMessageType('GetIdReply', (_message.Message,), dict(
  DESCRIPTOR = _GETIDREPLY,
  __module__ = 'exercise_pb2'
  # @@protoc_insertion_point(class_scope:exercise.GetIdReply)
  ))
_sym_db.RegisterMessage(GetIdReply)

CheckmeRequest = _reflection.GeneratedProtocolMessageType('CheckmeRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHECKMEREQUEST,
  __module__ = 'exercise_pb2'
  # @@protoc_insertion_point(class_scope:exercise.CheckmeRequest)
  ))
_sym_db.RegisterMessage(CheckmeRequest)

CheckmeReply = _reflection.GeneratedProtocolMessageType('CheckmeReply', (_message.Message,), dict(
  DESCRIPTOR = _CHECKMEREPLY,
  __module__ = 'exercise_pb2'
  # @@protoc_insertion_point(class_scope:exercise.CheckmeReply)
  ))
_sym_db.RegisterMessage(CheckmeReply)



_IDENT = _descriptor.ServiceDescriptor(
  name='Ident',
  full_name='exercise.Ident',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=167,
  serialized_end=231,
  methods=[
  _descriptor.MethodDescriptor(
    name='getID',
    full_name='exercise.Ident.getID',
    index=0,
    containing_service=None,
    input_type=_GETIDREQUEST,
    output_type=_GETIDREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_IDENT)

DESCRIPTOR.services_by_name['Ident'] = _IDENT


_CHECK = _descriptor.ServiceDescriptor(
  name='Check',
  full_name='exercise.Check',
  file=DESCRIPTOR,
  index=1,
  serialized_options=None,
  serialized_start=233,
  serialized_end=303,
  methods=[
  _descriptor.MethodDescriptor(
    name='checkme',
    full_name='exercise.Check.checkme',
    index=0,
    containing_service=None,
    input_type=_CHECKMEREQUEST,
    output_type=_CHECKMEREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CHECK)

DESCRIPTOR.services_by_name['Check'] = _CHECK

# @@protoc_insertion_point(module_scope)
